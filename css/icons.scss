$arrow-color: #666;
$font-size-base: 1.4rem;
$colors: (
  primary:    #2594e9, // 主色
  secondary:     #d7ebfe, // 辅色
  danger:     #ff4b00, // 错误
  success:     #4caf50, // 成功
  warning:     #fb8c00, // 警告
  light:      #dfdfdf, // 浅色
  dark:      #bfbfbf, // 深色
  text:      #333, // 深色
  paragraph:     #888888, // 文本色
  xwhite:     #FFFFFF, // 白色
);
@function color($map, $color-name, $color-key:null) {
  // Get the value from $color-name in the map
  // this can be of type color or a map
  $color-value: map-get($map, $color-name);

  // If we were given a map we need to grab the value
  // of the key that is passed or the base key
  @if(type-of($color-value) == map) {
    @if($color-key) {
      $color-value: map-fetch($map, $color-name, $color-key);
    } @else {
      $color-value: map-fetch($map, $color-name, base);
    }
  }

  // If it isn't a map then return the value
  @return $color-value;
}
$border-color: color($colors, light) !default;
$border: 1px solid $border-color !default;
// ==========箭头==============
.arrow{
  width: 8px;
  height: 8px;
  border-bottom: 1px solid $arrow-color;
  border-right: 1px solid $arrow-color;
  position: absolute;
  top: 50%;
  display: inline-block;
}
// 注意旋转和位移的先后顺序
.arrow-up{
  @extend .arrow;
  transform: rotate(-135deg) translateY(-50%);
}

.arrow-right{
  @extend .arrow;
  transform: rotate(-45deg) translateY(-50%);
}

.arrow-down{
  @extend .arrow;
  transform: rotate(45deg) translateY(-50%);
}

.arrow-left{
  @extend .arrow;
  transform: rotate(135deg) translateY(-50%);
}

.arrow-gou{
  width: 7px;
  height: 14px;
  border-bottom: 2px solid color($colors, primary);
  border-right: 2px solid color($colors, primary);
  transform: rotate(45deg) translateY(-50%);
}


// =========== 带圈的+ - x =========
.circle{
  width: 18px;
  height: 18px;
  line-height: 18px;
  text-align: center;
  border: $border;
  border-radius: 50%;
  background-color: #fff;
  box-sizing: border-box;
  font-style: normal;
  position: relative;
  color: $border-color;
  display: inline-block;
  overflow: hidden;
  vertical-align: middle;
}

// 放大镜
.magnifier{
  @extend .circle;
  overflow: visible;
  transform: rotate(-45deg) translateY(-50%);

  &:after{
    content: '';
    width: 1px;
    height: 8px;
    background-color: #dfdfdf;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    bottom: -8px;
  }
}

// +
.increase{
  @extend .circle;

  &.increase-big{
    width: 28px;
    height: 28px;
    line-height: 28px;
    font-size: $font-size-base + 1.6;
  }

  &:after{
    content: '＋';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    margin-top: -1px;
  }
}

//  x
.multiplication{
  @extend .circle;
  font-size: $font-size-base + 1;
  border-color: #fff;

  &:after,&:before{
    content: '';
    width: 70%;
    height: 1px;
    background-color: #bfbfbf;
    position: absolute;
    left: 20%;
    top: 50%;
  }
  &:after{
    transform: rotate(-45deg);
  }
  &:before{
    transform: rotate(45deg);
  }
}

// ?
.interrogation{
  @extend .circle;
  background-color: #bfbfbf;
  color: #fff;

  &:after{
    content: '?';
  }
}

// i
.exclamation{
  @extend .circle;
  width: 20px;
  height: 20px;
  border: 2px solid color($colors, primary);
  
  &:before{
    content: 'i';
    position: absolute;
    width: 20px;
    height: 20px;
    line-height: 20px;
    text-align: center;
    border-radius: 50%;
    left: -2px;
    top: -2px;
    font-size: $font-size-base + 0.2;
    font-weight: bold;
    color: color($colors, primary);
  }
}


// ========= 实心三角形 ===========
.triangle{
  width: 0;
  height: 0;
  display: inline-block;
}

.triangle-right{
  @extend .triangle;
  border-top: 5px solid transparent;
  border-left: 5px solid color($colors, primary);
  border-bottom: 5px solid transparent;
}

.triangle-left{
  @extend .triangle;
  border-width: 5px;
  border-style: solid;
  border-color: transparent color($colors, primary) transparent transparent;
}

.triangle-up{
  @extend .triangle;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-bottom: 5px solid color($colors, primary);
}

.triangle-down{
  @extend .triangle;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 5px solid color($colors, primary);
}

// 2个向右重叠的三角形
.arrow-double-right{
  position: absolute;
  width: 10px;
  height: 10px;
  &:before, &:after{
    content: '';
    @extend .triangle-right;
    position: absolute;
  }
}

// 2个向右重叠的三角形形成的有倾斜角的箭头
.arrow-solid-right{
  position: absolute;
  width: 10px;
  height: 10px;
  &:before{
    position: absolute;
    left: -3px;
    content: '';
    @extend .triangle-right;
    border-color: transparent transparent transparent #fff;
    z-index: 1;
  }
  &:after{
    position: absolute;
    content: '';
    @extend .triangle-right;
  }
}




// 小方块
.icon-square-blue,.icon-square-black{
  display: inline-block;
  width: 5px;
  height: 5px;
  vertical-align: middle;
  margin-right: 10px;
}
.icon-square-blue{
  background-color: color($colors, primary);
}
.icon-square-black{
  background-color: color($colors, text);
}


// 2个矩形和一个箭头组成的一个图形
.icon-rect, .icon-rect-shadow{
  position: absolute;
  left: 0;
  top: 50%;
  width: 15px;
  height: 22px;
}
.icon-rect{
  transform: translateY(-50%);
  background-color: color($colors, primary);
  z-index: 20;
}
.icon-rect-shadow{
  transform: translateY(-50%) rotateX(45deg) rotateZ(22deg);
  transform-origin: right bottom;
  background-color: color($colors, light);
  // transform可能导致z-index出现一些问题，故此处设置为-1
  z-index: -1;
}
.icon-triangle{
  position: absolute;
  z-index: 20;
  left: 5px;
  @extend .arrow-right;
  width: 6px;
  height: 6px;
  border-color: #fff;
}

// 3条横线形成的菜单
.menu{
  position: relative;
  width: 20px;
  height: 30px;
  background-color: rgba(0, 0, 0, .1);
  &:after{
    position: absolute;
    content: '';
    width: 15px;
    box-shadow: 0 5px 0 10px color($colors, primary),
                0 10px 0 15px color($colors, primary),
                0 15px 0 20px color($colors, primary);
  }
}


// 哭笑
.smile-cry{
  position: absolute;
  width: 30px;
  height: 30px;
  border: 1px solid color($colors, primary);
  border-radius: 50%;
  &:before, &:after{
    content: '';
    position: absolute;
    background-color: color($colors, primary);
    width: 4px;
    height: 4px;
    border-radius: 50%;
    top: 40%;
  }
  &:before{
    left: 6px;
  }
  &:after{
    right: 6px;
  }

  .smile, .cry{
    position: absolute;
    border: 1px solid color($colors, primary);
    border-top: 0;
    border-radius: 0 0 10px 10px;
    width: 10px;
    height: 5px;
    left: 50%;
    border-bottom: 1px solid color($colors, primary);
    transform: translateX(-50%);
  }
  .smile{
    bottom: 30%;
  }

  .cry{
    bottom: 40%;
  }
}
